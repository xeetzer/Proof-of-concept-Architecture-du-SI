
package ch.hegarc.servicenotaire.correction.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CorrectionWebServiceService", targetNamespace = "http://webservice.correction.servicenotaire.hegarc.ch/", wsdlLocation = "http://correction:8081/ws/ServiceCorrection?wsdl")
public class CorrectionWebServiceService
    extends Service
{

    private final static URL CORRECTIONWEBSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException CORRECTIONWEBSERVICESERVICE_EXCEPTION;
    private final static QName CORRECTIONWEBSERVICESERVICE_QNAME = new QName("http://webservice.correction.servicenotaire.hegarc.ch/", "CorrectionWebServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://correction:8081/ws/ServiceCorrection?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CORRECTIONWEBSERVICESERVICE_WSDL_LOCATION = url;
        CORRECTIONWEBSERVICESERVICE_EXCEPTION = e;
    }

    public CorrectionWebServiceService() {
        super(__getWsdlLocation(), CORRECTIONWEBSERVICESERVICE_QNAME);
    }

    public CorrectionWebServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CORRECTIONWEBSERVICESERVICE_QNAME, features);
    }

    public CorrectionWebServiceService(URL wsdlLocation) {
        super(wsdlLocation, CORRECTIONWEBSERVICESERVICE_QNAME);
    }

    public CorrectionWebServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CORRECTIONWEBSERVICESERVICE_QNAME, features);
    }

    public CorrectionWebServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CorrectionWebServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CorrectionWebService
     */
    @WebEndpoint(name = "CorrectionWebServicePort")
    public CorrectionWebService getCorrectionWebServicePort() {
        return super.getPort(new QName("http://webservice.correction.servicenotaire.hegarc.ch/", "CorrectionWebServicePort"), CorrectionWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CorrectionWebService
     */
    @WebEndpoint(name = "CorrectionWebServicePort")
    public CorrectionWebService getCorrectionWebServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservice.correction.servicenotaire.hegarc.ch/", "CorrectionWebServicePort"), CorrectionWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CORRECTIONWEBSERVICESERVICE_EXCEPTION!= null) {
            throw CORRECTIONWEBSERVICESERVICE_EXCEPTION;
        }
        return CORRECTIONWEBSERVICESERVICE_WSDL_LOCATION;
    }

}
